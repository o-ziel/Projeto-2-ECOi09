package com.repo.restaurantapp;

import javax.swing.*;
import java.util.ArrayList;
import java.util.Objects;

/**
 * @author Oziel Ferreira da Silva
 * @author Willian Luiz Silva Texeira
 * @author Luís Gaspar da Cruz
 */
public class Restaurant extends javax.swing.JFrame {

    private static final Integer PEDIDO_SCR = 0, COZINHA_SCR = 1, BANCADA_SCR = 2, PAGAMENTO_SCR = 3, MENU_SCR = 4,
            CLIENTE_SCR = 5;
    public Admin Components = new Admin();
    ArrayList<Order> ORDERS = new ArrayList<>();
    ArrayList<ProductObserver> COZINHA = new ArrayList<>(), BANCADA = new ArrayList<>(), CLIENTE = new ArrayList<>();
    Integer ONumber = 1, PNumber = 1;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BenchPanel;
    private javax.swing.JList<String> BnBenchList;
    private javax.swing.JScrollPane BnOrderSP;
    private javax.swing.JButton BnReadyB;
    private javax.swing.JLabel BnTableL;
    private javax.swing.JSpinner BnTableS;
    private javax.swing.JLabel BnWarnL;
    private javax.swing.JPanel ClientPanel;
    private javax.swing.JLabel CtInfoL;
    private javax.swing.JButton CtMenuB;
    private javax.swing.JTextField CtNameTF;
    private javax.swing.JTextField CtOrderNumTF;
    private javax.swing.JLabel CtOrdersL;
    private javax.swing.JButton CtPayB;
    private javax.swing.JLabel CtPleasureL;
    private javax.swing.JList<String> CtProductsList;
    private javax.swing.JScrollPane CtProductsSP;
    private javax.swing.JLabel CtValueL;
    private javax.swing.JTextField CtValueTF;
    private javax.swing.JList<String> CzKitchenList;
    private javax.swing.JScrollPane CzOrdersSP;
    private javax.swing.JButton CzReadyB;
    private javax.swing.JLabel CzTableL;
    private javax.swing.JSpinner CzTableS;
    private javax.swing.JLabel CzWarnL;
    private javax.swing.JMenuItem GotoBench;
    private javax.swing.JMenuItem GotoKitchen;
    private javax.swing.JPanel KitchenPanel;
    private javax.swing.JMenu Menu;
    private javax.swing.JMenuBar MenuBar;
    private javax.swing.JPanel MenuPanel;
    private javax.swing.JButton MnClientB;
    private javax.swing.JButton MnOrderB;
    private javax.swing.JButton MnPaymentB;
    private javax.swing.JLabel MnSelectTableL;
    private javax.swing.JSpinner MnTableS;
    private javax.swing.JPanel OrderPanel;
    private javax.swing.JPanel PaymentPanel;
    private javax.swing.JButton PdAddtoTableB;
    private javax.swing.JRadioButton PdBenchRB;
    private javax.swing.JLabel PdDestinationL;
    private javax.swing.JRadioButton PdKitchenRB;
    private javax.swing.JButton PdMenuB;
    private javax.swing.JLabel PdNameL;
    private javax.swing.JTextField PdNameTF;
    private javax.swing.JLabel PdPrizeL;
    private javax.swing.JTextField PdPrizeTF;
    private javax.swing.JComboBox<String> PdProductCB;
    private javax.swing.JLabel PdProductNameL;
    private javax.swing.JLabel PdTableL;
    private javax.swing.JSpinner PdTableS;
    private javax.swing.JLabel PgClientL;
    private javax.swing.JTextField PgClientTF;
    private javax.swing.JButton PgMenuB;
    private javax.swing.JLabel PgOrderNumL;
    private javax.swing.JTextField PgOrderNumTF;
    private javax.swing.JButton PgPayB;
    private javax.swing.JLabel PgPayTableL;
    private javax.swing.JTextField PgPayTableTF;
    private javax.swing.JLabel PgValueL;
    private javax.swing.JTextField PgValueTF;
    private javax.swing.JLabel PgWarnL;
    private javax.swing.JTabbedPane Tab;
    private javax.swing.JMenu WorkerMenu;
    private javax.swing.JMenuItem jMenuItem1;
    /**
     * Creates new form Restaurant
     */
    public Restaurant() {
        initComponents();
        CzKitchenList.setEnabled(false);
        Tab.setSelectedIndex(MENU_SCR);

        if (Components.PRODUCTS.get(0).PRODUCT_STATUS
                .equals(Components.STATUS_OP[0])) {
            PdBenchRB.setSelected(true);
            PdKitchenRB.setSelected(false);
        } else if (Components.PRODUCTS.get(0).PRODUCT_STATUS
                .equals(Components.STATUS_OP[1])) {
            PdBenchRB.setSelected(false);
            PdKitchenRB.setSelected(true);
        } else {
            PdBenchRB.setSelected(false);
            PdKitchenRB.setSelected(false);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Tab = new javax.swing.JTabbedPane();
        OrderPanel = new javax.swing.JPanel();
        PdTableL = new javax.swing.JLabel();
        PdTableS = new javax.swing.JSpinner();
        PdDestinationL = new javax.swing.JLabel();
        PdBenchRB = new javax.swing.JRadioButton();
        PdKitchenRB = new javax.swing.JRadioButton();
        PdNameL = new javax.swing.JLabel();
        PdNameTF = new javax.swing.JTextField();
        PdProductNameL = new javax.swing.JLabel();
        PdProductCB = new javax.swing.JComboBox<>();
        PdPrizeL = new javax.swing.JLabel();
        PdPrizeTF = new javax.swing.JTextField();
        PdMenuB = new javax.swing.JButton();
        PdAddtoTableB = new javax.swing.JButton();
        KitchenPanel = new javax.swing.JPanel();
        CzWarnL = new javax.swing.JLabel();
        CzOrdersSP = new javax.swing.JScrollPane();
        CzKitchenList = new javax.swing.JList<>();
        CzTableL = new javax.swing.JLabel();
        CzTableS = new javax.swing.JSpinner();
        CzReadyB = new javax.swing.JButton();
        BenchPanel = new javax.swing.JPanel();
        BnWarnL = new javax.swing.JLabel();
        BnOrderSP = new javax.swing.JScrollPane();
        BnBenchList = new javax.swing.JList<>();
        BnTableL = new javax.swing.JLabel();
        BnTableS = new javax.swing.JSpinner();
        BnReadyB = new javax.swing.JButton();
        PaymentPanel = new javax.swing.JPanel();
        PgClientL = new javax.swing.JLabel();
        PgClientTF = new javax.swing.JTextField();
        PgPayTableL = new javax.swing.JLabel();
        PgPayTableTF = new javax.swing.JTextField();
        PgValueL = new javax.swing.JLabel();
        PgValueTF = new javax.swing.JTextField();
        PgOrderNumL = new javax.swing.JLabel();
        PgOrderNumTF = new javax.swing.JTextField();
        PgWarnL = new javax.swing.JLabel();
        PgPayB = new javax.swing.JButton();
        PgMenuB = new javax.swing.JButton();
        MenuPanel = new javax.swing.JPanel();
        MnSelectTableL = new javax.swing.JLabel();
        MnTableS = new javax.swing.JSpinner();
        MnPaymentB = new javax.swing.JButton();
        MnClientB = new javax.swing.JButton();
        MnOrderB = new javax.swing.JButton();
        ClientPanel = new javax.swing.JPanel();
        CtPleasureL = new javax.swing.JLabel();
        CtNameTF = new javax.swing.JTextField();
        CtOrdersL = new javax.swing.JLabel();
        CtOrderNumTF = new javax.swing.JTextField();
        CtProductsSP = new javax.swing.JScrollPane();
        CtProductsList = new javax.swing.JList<>();
        CtInfoL = new javax.swing.JLabel();
        CtMenuB = new javax.swing.JButton();
        CtPayB = new javax.swing.JButton();
        CtValueL = new javax.swing.JLabel();
        CtValueTF = new javax.swing.JTextField();
        MenuBar = new javax.swing.JMenuBar();
        Menu = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        WorkerMenu = new javax.swing.JMenu();
        GotoBench = new javax.swing.JMenuItem();
        GotoKitchen = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Restaurante (Oziel - Willian - Luís)");
        setName("Restaurante"); // NOI18N
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        PdTableL.setText("Mesa:");

        PdTableS.setNextFocusableComponent(PdAddtoTableB);
        PdTableS.setValue(1);
        PdTableS.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                PdTableSStateChanged(evt);
            }
        });

        PdDestinationL.setText("Destino:");

        PdBenchRB.setSelected(true);
        PdBenchRB.setText("Bancada");
        PdBenchRB.setEnabled(false);

        PdKitchenRB.setText("Cozinha");
        PdKitchenRB.setEnabled(false);

        PdNameL.setText("Nome do Cliente:");

        PdProductNameL.setText("Produto:");

        PdProductCB.setModel(new javax.swing.DefaultComboBoxModel<>(Components.PRODUCT_PLATES.toArray(new String[0])));
        PdProductCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PdProductCBActionPerformed(evt);
            }
        });

        PdPrizeL.setText("Preço:");

        PdPrizeTF.setEditable(false);

        PdMenuB.setText("Voltar para o Menu Principal");
        PdMenuB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PdMenuBActionPerformed(evt);
            }
        });

        PdAddtoTableB.setText("Adicionar Produto à Mesa");
        PdAddtoTableB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PdAddtoTableBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout OrderPanelLayout = new javax.swing.GroupLayout(OrderPanel);
        OrderPanel.setLayout(OrderPanelLayout);
        OrderPanelLayout.setHorizontalGroup(
                OrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(OrderPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(OrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(OrderPanelLayout.createSequentialGroup()
                                                .addComponent(PdTableL)
                                                .addGap(18, 18, 18)
                                                .addComponent(PdTableS, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(PdDestinationL)
                                                .addGap(18, 18, 18)
                                                .addGroup(OrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(PdKitchenRB)
                                                        .addComponent(PdBenchRB))
                                                .addGap(0, 142, Short.MAX_VALUE))
                                        .addGroup(OrderPanelLayout.createSequentialGroup()
                                                .addGroup(OrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(PdNameL)
                                                        .addComponent(PdProductNameL, javax.swing.GroupLayout.Alignment.TRAILING))
                                                .addGap(18, 18, 18)
                                                .addGroup(OrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(PdNameTF)
                                                        .addComponent(PdProductCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, OrderPanelLayout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addGroup(OrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, OrderPanelLayout.createSequentialGroup()
                                                                .addComponent(PdPrizeL)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(PdPrizeTF, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addComponent(PdAddtoTableB, javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(PdMenuB, javax.swing.GroupLayout.Alignment.TRAILING))))
                                .addContainerGap())
        );
        OrderPanelLayout.setVerticalGroup(
                OrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(OrderPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(OrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(PdTableL)
                                        .addComponent(PdTableS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(PdBenchRB)
                                        .addComponent(PdDestinationL))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(PdKitchenRB)
                                .addGap(18, 18, 18)
                                .addGroup(OrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(PdNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(PdNameL))
                                .addGap(18, 18, 18)
                                .addGroup(OrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(PdProductNameL)
                                        .addComponent(PdProductCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(OrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(PdPrizeL)
                                        .addComponent(PdPrizeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                                .addComponent(PdAddtoTableB)
                                .addGap(18, 18, 18)
                                .addComponent(PdMenuB)
                                .addContainerGap())
        );

        PdTableS.setValue(1);

        Tab.addTab("Pedido", OrderPanel);

        KitchenPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                KitchenPanelComponentShown(evt);
            }
        });

        CzWarnL.setText("Pedidos da mesa direcionados à Cozinha:");

        CzKitchenList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = {};

            public int getSize() {
                return strings.length;
            }

            public String getElementAt(int i) {
                return strings[i];
            }
        });
        CzOrdersSP.setViewportView(CzKitchenList);

        CzTableL.setText("Mesa");

        CzTableS.setValue(1);
        CzTableS.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                CzTableSStateChanged(evt);
            }
        });

        CzReadyB.setText("Marcar todos como prontos");
        CzReadyB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CzReadyBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout KitchenPanelLayout = new javax.swing.GroupLayout(KitchenPanel);
        KitchenPanel.setLayout(KitchenPanelLayout);
        KitchenPanelLayout.setHorizontalGroup(
                KitchenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(KitchenPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(KitchenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(CzOrdersSP, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                                        .addGroup(KitchenPanelLayout.createSequentialGroup()
                                                .addComponent(CzTableL)
                                                .addGap(18, 18, 18)
                                                .addComponent(CzTableS, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(CzReadyB))
                                        .addGroup(KitchenPanelLayout.createSequentialGroup()
                                                .addComponent(CzWarnL)
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                .addContainerGap())
        );
        KitchenPanelLayout.setVerticalGroup(
                KitchenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(KitchenPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(CzWarnL)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(CzOrdersSP, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addGroup(KitchenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(CzReadyB)
                                        .addComponent(CzTableS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(CzTableL))
                                .addContainerGap())
        );

        Tab.addTab("Cozinha", KitchenPanel);

        BenchPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                BenchPanelComponentShown(evt);
            }
        });

        BnWarnL.setText("Pedidos da mesa direcionados à Bancada:");

        BnBenchList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = {};

            public int getSize() {
                return strings.length;
            }

            public String getElementAt(int i) {
                return strings[i];
            }
        });
        BnBenchList.setEnabled(false);
        BnOrderSP.setViewportView(BnBenchList);

        BnTableL.setText("Mesa");

        BnTableS.setValue(1);
        BnTableS.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                BnTableSStateChanged(evt);
            }
        });

        BnReadyB.setText("Marcar todos como prontos");
        BnReadyB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BnReadyBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout BenchPanelLayout = new javax.swing.GroupLayout(BenchPanel);
        BenchPanel.setLayout(BenchPanelLayout);
        BenchPanelLayout.setHorizontalGroup(
                BenchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(BenchPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(BenchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(BnOrderSP, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BenchPanelLayout.createSequentialGroup()
                                                .addComponent(BnTableL)
                                                .addGap(18, 18, 18)
                                                .addComponent(BnTableS, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(BnReadyB))
                                        .addGroup(BenchPanelLayout.createSequentialGroup()
                                                .addComponent(BnWarnL)
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                .addContainerGap())
        );
        BenchPanelLayout.setVerticalGroup(
                BenchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(BenchPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(BnWarnL)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(BnOrderSP, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addGroup(BenchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(BnReadyB)
                                        .addComponent(BnTableL)
                                        .addComponent(BnTableS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())
        );

        Tab.addTab("Bancada", BenchPanel);

        PaymentPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                PaymentPanelComponentShown(evt);
            }
        });

        PgClientL.setText("Cliente");

        PgClientTF.setEditable(false);

        PgPayTableL.setText("Pagar Mesa:");

        PgPayTableTF.setEditable(false);
        PgPayTableTF.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        PgValueL.setText("Valor:");

        PgValueTF.setEditable(false);
        PgValueTF.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        PgOrderNumL.setText("Ordem nº:");

        PgOrderNumTF.setEditable(false);
        PgOrderNumTF.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        PgWarnL.setText("Caso queira checar os pedidos feitos pela mesa volte à tela do Cliente");

        PgPayB.setText("Efetuar Pagamento");
        PgPayB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PgPayBActionPerformed(evt);
            }
        });

        PgMenuB.setText("Voltar para o Menu Principal");
        PgMenuB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PgMenuBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PaymentPanelLayout = new javax.swing.GroupLayout(PaymentPanel);
        PaymentPanel.setLayout(PaymentPanelLayout);
        PaymentPanelLayout.setHorizontalGroup(
                PaymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PaymentPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(PaymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(PaymentPanelLayout.createSequentialGroup()
                                                .addComponent(PgClientL)
                                                .addGap(18, 18, 18)
                                                .addComponent(PgClientTF))
                                        .addGroup(PaymentPanelLayout.createSequentialGroup()
                                                .addGroup(PaymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(PgPayB)
                                                        .addGroup(PaymentPanelLayout.createSequentialGroup()
                                                                .addGroup(PaymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(PaymentPanelLayout.createSequentialGroup()
                                                                                .addComponent(PgPayTableL)
                                                                                .addGap(18, 18, 18)
                                                                                .addComponent(PgPayTableTF, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                        .addGroup(PaymentPanelLayout.createSequentialGroup()
                                                                                .addComponent(PgOrderNumL)
                                                                                .addGap(18, 18, 18)
                                                                                .addComponent(PgOrderNumTF, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                                .addGap(67, 67, 67)
                                                                .addComponent(PgValueL)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(PgValueTF, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addComponent(PgWarnL)
                                                        .addComponent(PgMenuB))
                                                .addGap(0, 45, Short.MAX_VALUE)))
                                .addContainerGap())
        );
        PaymentPanelLayout.setVerticalGroup(
                PaymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PaymentPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(PaymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(PgClientL)
                                        .addComponent(PgClientTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(19, 19, 19)
                                .addGroup(PaymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(PgPayTableL)
                                        .addComponent(PgPayTableTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(PgValueL)
                                        .addComponent(PgValueTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(PaymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(PgOrderNumL)
                                        .addComponent(PgOrderNumTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(PgWarnL)
                                .addGap(18, 18, 18)
                                .addComponent(PgPayB)
                                .addGap(18, 18, 18)
                                .addComponent(PgMenuB)
                                .addContainerGap(120, Short.MAX_VALUE))
        );

        Tab.addTab("Pagamento", PaymentPanel);

        MnSelectTableL.setText("Selecione o número de sua mesa:");

        MnTableS.setValue(1);
        MnTableS.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                MnTableSStateChanged(evt);
            }
        });

        MnPaymentB.setText("Ir para a tela de Pagamento");
        MnPaymentB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MnPaymentBActionPerformed(evt);
            }
        });

        MnClientB.setText("Ir para a tela do Cliente");
        MnClientB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MnClientBActionPerformed(evt);
            }
        });

        MnOrderB.setText("Fazer Pedidos");
        MnOrderB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MnOrderBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MenuPanelLayout = new javax.swing.GroupLayout(MenuPanel);
        MenuPanel.setLayout(MenuPanelLayout);
        MenuPanelLayout.setHorizontalGroup(
                MenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(MenuPanelLayout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(MenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(MnPaymentB)
                                        .addComponent(MnOrderB)
                                        .addGroup(MenuPanelLayout.createSequentialGroup()
                                                .addComponent(MnSelectTableL)
                                                .addGap(18, 18, 18)
                                                .addComponent(MnTableS, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(MnClientB))
                                .addContainerGap(148, Short.MAX_VALUE))
        );
        MenuPanelLayout.setVerticalGroup(
                MenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(MenuPanelLayout.createSequentialGroup()
                                .addGap(74, 74, 74)
                                .addGroup(MenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(MnSelectTableL)
                                        .addComponent(MnTableS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(MnPaymentB)
                                .addGap(18, 18, 18)
                                .addComponent(MnClientB)
                                .addGap(18, 18, 18)
                                .addComponent(MnOrderB)
                                .addContainerGap(125, Short.MAX_VALUE))
        );

        Tab.addTab("Menu", MenuPanel);

        ClientPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                ClientPanelComponentShown(evt);
            }
        });

        CtPleasureL.setText("É UM PRAZER TE RECEBER");

        CtNameTF.setEditable(false);
        CtNameTF.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        CtOrdersL.setText("Sua ordem é a nº:");

        CtOrderNumTF.setEditable(false);
        CtOrderNumTF.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        CtProductsList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = {};

            public int getSize() {
                return strings.length;
            }

            public String getElementAt(int i) {
                return strings[i];
            }
        });
        CtProductsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        CtProductsList.setEnabled(false);
        CtProductsSP.setViewportView(CtProductsList);

        CtInfoL.setText("Caso queira fazer mais algum pedido volte até o Menu Principal");

        CtMenuB.setText("Voltar para o Menu Principal");
        CtMenuB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CtMenuBActionPerformed(evt);
            }
        });

        CtPayB.setText("Pagar");
        CtPayB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CtPayBActionPerformed(evt);
            }
        });

        CtValueL.setText(", no valor de:");

        CtValueTF.setEditable(false);
        CtValueTF.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        javax.swing.GroupLayout ClientPanelLayout = new javax.swing.GroupLayout(ClientPanel);
        ClientPanel.setLayout(ClientPanelLayout);
        ClientPanelLayout.setHorizontalGroup(
                ClientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(ClientPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(ClientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(CtNameTF)
                                        .addComponent(CtProductsSP)
                                        .addGroup(ClientPanelLayout.createSequentialGroup()
                                                .addComponent(CtMenuB)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(CtPayB))
                                        .addGroup(ClientPanelLayout.createSequentialGroup()
                                                .addGroup(ClientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(CtPleasureL)
                                                        .addComponent(CtInfoL))
                                                .addGap(0, 0, Short.MAX_VALUE))
                                        .addGroup(ClientPanelLayout.createSequentialGroup()
                                                .addComponent(CtOrdersL)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(CtOrderNumTF, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(CtValueL)
                                                .addGap(10, 10, 10)
                                                .addComponent(CtValueTF, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)))
                                .addContainerGap())
        );
        ClientPanelLayout.setVerticalGroup(
                ClientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(ClientPanelLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(CtPleasureL)
                                .addGap(4, 4, 4)
                                .addComponent(CtNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(ClientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(CtOrdersL)
                                        .addComponent(CtOrderNumTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(CtValueL)
                                        .addComponent(CtValueTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(CtProductsSP, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(CtInfoL)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(ClientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(CtMenuB)
                                        .addComponent(CtPayB))
                                .addContainerGap(51, Short.MAX_VALUE))
        );

        Tab.addTab("Cliente", ClientPanel);

        getContentPane().add(Tab, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -24, -1, 370));

        Menu.setText("Ir para...");

        jMenuItem1.setText("Menu Cliente");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        Menu.add(jMenuItem1);

        WorkerMenu.setText("Funcionário");

        GotoBench.setText("Bancada");
        GotoBench.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GotoBenchActionPerformed(evt);
            }
        });
        WorkerMenu.add(GotoBench);

        GotoKitchen.setText("Cozinha");
        GotoKitchen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GotoKitchenActionPerformed(evt);
            }
        });
        WorkerMenu.add(GotoKitchen);

        Menu.add(WorkerMenu);

        MenuBar.add(Menu);

        setJMenuBar(MenuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PdAddtoTableBActionPerformed(java.awt.event.ActionEvent evt) {
        if (!PdNameTF.getText().isBlank()) {
            Order Pedido = new Order();
            if (ORDERS.isEmpty()) {
                PdNameTF.setEditable(false);
                Pedido = new Order(ONumber++, (Integer) PdTableS.getValue());
                Pedido.NAME = PdNameTF.getText();
                Pedido.TABLE = (Integer) PdTableS.getValue();
                Pedido.Products.add(new Product(Components.PRODUCTS.get(PdProductCB.getSelectedIndex())));

                Pedido.Products.get(Pedido.Products.size() - 1).NUMBER = PNumber++;
                if (PdBenchRB.isSelected())
                    Pedido.STATUS.subscribe(Components.STATUS_OP[0], Pedido.Products.get(Pedido.Products.size() - 1));
                else
                    Pedido.STATUS.subscribe(Components.STATUS_OP[1], Pedido.Products.get(Pedido.Products.size() - 1));

                PdPrizeTF
                        .setText("R$ " + Components.PRODUCTS.get(PdProductCB.getSelectedIndex()).getProductPrize().toString());
            } else
                for (Order N : ORDERS) {
                    if (Objects.equals(N.TABLE, (Integer) PdTableS.getValue()) && N.ACTIVE) {
                        N.Products.add(new Product(Components.PRODUCTS.get(PdProductCB.getSelectedIndex())));
                        N.Products.get(N.Products.size() - 1).NUMBER = PNumber++;
                        PdPrizeTF.setText("R$ " + N.getPrize().toString());

                        if (PdBenchRB.isSelected())
                            N.STATUS.subscribe(Components.STATUS_OP[0], N.Products.get(N.Products.size() - 1));
                        else
                            N.STATUS.subscribe(Components.STATUS_OP[1], N.Products.get(N.Products.size() - 1));
                    } else {
                        if (Objects.equals(ORDERS.indexOf(N), ORDERS.size() - 1)) {
                            PdNameTF.setEditable(false);
                            Pedido = new Order(ONumber++, (Integer) PdTableS.getValue());
                            Pedido.NAME = PdNameTF.getText();
                            Pedido.TABLE = (Integer) PdTableS.getValue();
                            Pedido.Products.add(new Product(Components.PRODUCTS.get(PdProductCB.getSelectedIndex())));
                            Pedido.Products.get(Pedido.Products.size() - 1).NUMBER = PNumber++;

                            if (PdBenchRB.isSelected())
                                Pedido.STATUS.subscribe(Components.STATUS_OP[0],
                                        Pedido.Products.get(Pedido.Products.size() - 1));
                            else
                                Pedido.STATUS.subscribe(Components.STATUS_OP[1],
                                        Pedido.Products.get(Pedido.Products.size() - 1));

                            PdPrizeTF.setText("R$ "
                                    + Components.PRODUCTS.get(PdProductCB.getSelectedIndex()).getProductPrize().toString());
                        }
                    }
                }

            if (!Pedido.NAME.isBlank()) {
                ORDERS.add(Pedido);
            }
        } else
            JOptionPane.showMessageDialog(null, "Você deve preencher o nome do Cliente!");
    }

    private void PdTableSStateChanged(javax.swing.event.ChangeEvent evt) {
        PdProductCB.setSelectedIndex(0);
        PdNameTF.setText("");
        PdPrizeTF.setText("");
        PdNameTF.setEditable(true);

        if ((Integer) PdTableS.getValue() < 1)
            PdTableS.setValue(Components.NUMBER_OF_TABLES);
        if ((Integer) PdTableS.getValue() > Components.NUMBER_OF_TABLES)
            PdTableS.setValue(1);

        for (Order N : ORDERS) {
            if (Objects.equals(N.TABLE, (Integer) PdTableS.getValue()) && N.ACTIVE) {
                PdNameTF.setEditable(false);
                PdNameTF.setText(ORDERS.get(ORDERS.indexOf(N)).NAME);
                PdPrizeTF.setText("R$ " + N.getPrize().toString());
            }
        }
    }

    private void PdProductCBActionPerformed(java.awt.event.ActionEvent evt) {
        if (Components.PRODUCTS.get(PdProductCB.getSelectedIndex()).PRODUCT_STATUS.equals(Components.STATUS_OP[0])) {
            PdBenchRB.setSelected(true);
            PdKitchenRB.setSelected(false);
        }
        if (Components.PRODUCTS.get(PdProductCB.getSelectedIndex()).PRODUCT_STATUS.equals(Components.STATUS_OP[1])) {
            PdKitchenRB.setSelected(true);
            PdBenchRB.setSelected(false);
        }
    }

    private void CzTableSStateChanged(javax.swing.event.ChangeEvent evt) {
        if ((Integer) CzTableS.getValue() < 1)
            CzTableS.setValue(Components.NUMBER_OF_TABLES);
        if ((Integer) CzTableS.getValue() > Components.NUMBER_OF_TABLES)
            CzTableS.setValue(1);

        CzKitchenList.setModel(new javax.swing.AbstractListModel<String>() {
            ArrayList<Product> P = new ArrayList<>();

            @Override
            public int getSize() {
                return P.size();
            }

            @Override
            public String getElementAt(int i) {
                return P.get(i).toString();
            }
        });

        for (Order N : ORDERS) {
            if (Objects.equals(N.TABLE, (Integer) CzTableS.getValue()) && N.ACTIVE) {
                CzKitchenList.setModel(new javax.swing.AbstractListModel<String>() {
                    ArrayList<Product> P = new ProductFacade().KitchenProducts(N.STATUS);

                    @Override
                    public int getSize() {
                        return P.size();
                    }

                    @Override
                    public String getElementAt(int i) {
                        return P.get(i).toString();
                    }
                });
            }
        }
    }

    private void CzReadyBActionPerformed(java.awt.event.ActionEvent evt) {
        if (JOptionPane.showConfirmDialog(null, "Deseja entregar os pedidos da cozinha para essa mesa?",
                "Enviar os pedidos?", 0) == 0) {
            for (Order N : ORDERS) {
                if (Objects.equals(N.TABLE, (Integer) CzTableS.getValue()) && N.ACTIVE) {
                    N.STATUS.notificate(Components.STATUS_OP[1], Components.STATUS_OP[2]);

                    CzKitchenList.setModel(new javax.swing.AbstractListModel<String>() {
                        ArrayList<Product> P = new ProductFacade().KitchenProducts(N.STATUS);

                        @Override
                        public int getSize() {
                            return P.size();
                        }

                        @Override
                        public String getElementAt(int i) {
                            return P.get(i).toString();
                        }
                    });
                }
            }
        }
    }

    private void MnTableSStateChanged(javax.swing.event.ChangeEvent evt) {
        if ((Integer) MnTableS.getValue() < 1)
            MnTableS.setValue(Components.NUMBER_OF_TABLES);
        if ((Integer) MnTableS.getValue() > Components.NUMBER_OF_TABLES)
            MnTableS.setValue(1);

        PdTableS.setValue((Integer) MnTableS.getValue());
        PdTableS.setEnabled(false);
        CzTableS.setValue((Integer) MnTableS.getValue());
        BnTableS.setValue((Integer) MnTableS.getValue());
    }

    private void KitchenPanelComponentShown(java.awt.event.ComponentEvent evt) {
        for (Order N : ORDERS) {
            if (Objects.equals(N.TABLE, (Integer) CzTableS.getValue()) && N.ACTIVE) {
                CzKitchenList.setModel(new javax.swing.AbstractListModel<String>() {
                    ArrayList<Product> P = new ProductFacade().KitchenProducts(N.STATUS);

                    @Override
                    public int getSize() {
                        return P.size();
                    }

                    @Override
                    public String getElementAt(int i) {
                        return P.get(i).toString();
                    }
                });
            }
        }
    }

    private void MnPaymentBActionPerformed(java.awt.event.ActionEvent evt) {
        Tab.setSelectedIndex(PAGAMENTO_SCR);
    }

    private void MnClientBActionPerformed(java.awt.event.ActionEvent evt) {
        Tab.setSelectedIndex(CLIENTE_SCR);
    }

    private void MnOrderBActionPerformed(java.awt.event.ActionEvent evt) {
        PdTableS.setEnabled(false);
        Tab.setSelectedIndex(PEDIDO_SCR);
    }

    private void PaymentPanelComponentShown(java.awt.event.ComponentEvent evt) {
        if (!PdNameTF.isEditable()) {
            PgClientTF.setText(PdNameTF.getText());
            PgPayTableTF.setText(MnTableS.getValue().toString());
            ORDERS.stream().filter(N -> (Objects.equals(N.TABLE, (Integer) CzTableS.getValue()) && N.ACTIVE))
                    .forEachOrdered(N -> {
                        PgOrderNumTF.setText(String.format("%05d", N.NUMBER));
                    });
            PgValueTF.setText(PdPrizeTF.getText());
        } else {
            PgClientTF.setText("");
            PgPayTableTF.setText("");
            PgOrderNumTF.setText("");
            PgValueTF.setText("");
        }
    }

    private void PgMenuBActionPerformed(java.awt.event.ActionEvent evt) {
        Tab.setSelectedIndex(MENU_SCR);
    }

    private void CtMenuBActionPerformed(java.awt.event.ActionEvent evt) {
        Tab.setSelectedIndex(MENU_SCR);
    }

    private void BnTableSStateChanged(javax.swing.event.ChangeEvent evt) {
        if ((Integer) BnTableS.getValue() < 1)
            BnTableS.setValue(Components.NUMBER_OF_TABLES);
        if ((Integer) BnTableS.getValue() > Components.NUMBER_OF_TABLES)
            BnTableS.setValue(1);

        BnBenchList.setModel(new javax.swing.AbstractListModel<String>() {
            ArrayList<Product> P = new ArrayList<>();

            @Override
            public int getSize() {
                return P.size();
            }

            @Override
            public String getElementAt(int i) {
                return P.get(i).toString();
            }
        });

        for (Order N : ORDERS) {
            if (Objects.equals(N.TABLE, (Integer) BnTableS.getValue()) && N.ACTIVE) {
                BnBenchList.setModel(new javax.swing.AbstractListModel<String>() {
                    ArrayList<Product> P = new ProductFacade().BenchProducts(N.STATUS);

                    @Override
                    public int getSize() {
                        return P.size();
                    }

                    @Override
                    public String getElementAt(int i) {
                        return P.get(i).toString();
                    }
                });
            }
        }
    }

    private void CtPayBActionPerformed(java.awt.event.ActionEvent evt) {
        Tab.setSelectedIndex(PAGAMENTO_SCR);
    }

    private void ClientPanelComponentShown(java.awt.event.ComponentEvent evt) {
        if (!PdNameTF.isEditable()) {
            CtNameTF.setText(PdNameTF.getText());
            ORDERS.stream().filter(N -> (Objects.equals(N.TABLE, (Integer) CzTableS.getValue()) && N.ACTIVE))
                    .forEachOrdered(N -> {
                        CtOrderNumTF.setText(String.format("%05d", N.NUMBER));
                    });
            CtValueTF.setText(PdPrizeTF.getText());
        }
        for (Order N : ORDERS) {
            if (Objects.equals(N.TABLE, (Integer) MnTableS.getValue()) && N.ACTIVE) {
                CtProductsList.setModel(new javax.swing.AbstractListModel<String>() {
                    ArrayList<Product> P = N.Products;

                    @Override
                    public int getSize() {
                        return P.size();
                    }

                    @Override
                    public String getElementAt(int i) {
                        return P.get(i).toString();
                    }
                });
            }
        }
    }

    private void PgPayBActionPerformed(java.awt.event.ActionEvent evt) {
        ORDERS.stream().filter(N -> (Objects.equals(N.TABLE, (Integer) CzTableS.getValue()) && N.ACTIVE))
                .forEachOrdered((Order N) -> {
                    Integer counter = 0;
                    for (int i = 0; i < Components.STATUS_OP.length - 1; i++)
                        if (N.STATUS.watchers.get(Components.STATUS_OP[i]).isEmpty())
                            counter++;
                    if (counter == Components.STATUS_OP.length - 1) {
                        PdNameTF.setEditable(true);
                        PdNameTF.setText("");
                        PdPrizeTF.setText("");
                        PgClientTF.setText("");
                        PgPayTableTF.setText("");
                        PgValueTF.setText("");
                        PgOrderNumTF.setText("");
                        N.ACTIVE = false;
                        JOptionPane.showMessageDialog(null,
                                "Pagamento efetuado!\nA mesa " + N.TABLE + " agora está livre.");
                    } else {
                        JOptionPane.showMessageDialog(null,
                                "Impossível pagar enquanto ainda houver produtos que não foram entregues "
                                        + "para essa mesa!");
                    }
                });
    }

    private void BenchPanelComponentShown(java.awt.event.ComponentEvent evt) {
        for (Order N : ORDERS) {
            if (Objects.equals(N.TABLE, (Integer) BnTableS.getValue()) && N.ACTIVE) {
                BnBenchList.setModel(new javax.swing.AbstractListModel<String>() {
                    ArrayList<Product> P = new ProductFacade().BenchProducts(N.STATUS);

                    @Override
                    public int getSize() {
                        return P.size();
                    }

                    @Override
                    public String getElementAt(int i) {
                        return P.get(i).toString();
                    }
                });
            }
        }
    }

    private void BnReadyBActionPerformed(java.awt.event.ActionEvent evt) {
        if (JOptionPane.showConfirmDialog(null, "Deseja entregar os pedidos da bancada para essa mesa?",
                "Enviar os pedidos?", 0) == 0) {
            for (Order N : ORDERS) {
                if (Objects.equals(N.TABLE, (Integer) CzTableS.getValue()) && N.ACTIVE) {
                    N.STATUS.notificate(Components.STATUS_OP[0], Components.STATUS_OP[2]);

                    BnBenchList.setModel(new javax.swing.AbstractListModel<String>() {
                        ArrayList<Product> P = new ProductFacade().BenchProducts(N.STATUS);

                        @Override
                        public int getSize() {
                            return P.size();
                        }

                        @Override
                        public String getElementAt(int i) {
                            return P.get(i).toString();
                        }
                    });
                }
            }
        }
    }

    private void PdMenuBActionPerformed(java.awt.event.ActionEvent evt) {
        Tab.setSelectedIndex(MENU_SCR);
    }

    private void GotoKitchenActionPerformed(java.awt.event.ActionEvent evt) {
        Tab.setSelectedIndex(COZINHA_SCR);
    }

    private void GotoBenchActionPerformed(java.awt.event.ActionEvent evt) {
        Tab.setSelectedIndex(BANCADA_SCR);
    }

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {
        Tab.setSelectedIndex(MENU_SCR);
    }
    // End of variables declaration//GEN-END:variables
}
